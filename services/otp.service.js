import crypto from "crypto";
import { sendEmail } from "../config/mailer.js";



  // Prepare plain text email (fallback for older email clients)
  // const emailContent = `
  //   You have a new message from your website contact form:

  //   Name: ${name}
  //   Email: ${email}
  //   Phone: ${phone}
  //   Message: ${message}
  // `;

  // Prepare HTML email (styled version)
  // const emailHtmlContent = `
  //   <div style="font-family: Arial, sans-serif; background-color: #f4f4f4; padding: 20px;">
  //     <div style="max-width: 600px; margin: auto; background: #fff; padding: 30px; border-radius: 8px;">
  //       <p style="font-size: 16px;"><strong>Name:</strong> ${user.fullName}</p>
  //       <div style="background-color: #f9f9f9; padding: 15px; border-radius: 5px; margin-top: 10px;">
  //         ${message}
  //       </div>
  //       <p style="margin-top: 30px; font-size: 12px; color: #888;">This email was sent automatically generated by Lily backend team.</p>
  //     </div>
  //   </div>
  // `;

// otp generation & send email function
export const generateAndSendOTP = async (user) => {
  const otp = crypto.randomInt(100000, 999999).toString();
  const hashedOTP = crypto.createHash("sha256").update(otp).digest("hex");
  const otpExpires = Date.now() + 10 * 60 * 1000;

  user.otp = hashedOTP;
  user.otpExpires = otpExpires;
  await user.save();

  await sendEmail({
    to: user.email,
    subject: "Verify your email - Lily ðŸŒ±",
    html: `
    <div style="font-family: Arial, sans-serif; background-color: #f4f4f4; padding: 20px;">
      <div style="max-width: 600px; margin: auto; background: #fff; padding: 30px; border-radius: 8px;">
        <p style="font-size: 16px;"><strong>Greeting's, ${user.fullName}</strong></p>
        <div style="background-color: #f9f9f9; padding: 15px; border-radius: 5px; margin-top: 10px;">
          <p>Your verification code is: <b style="font-size: 14px;">${otp}</b></p>
          <p>It is valid for 10 minutes.</p>
          <p>Thank you for registering with Lily!</p>
        </div>
        <p style="margin-top: 30px; font-size: 12px; color: #888;">This email was sent automatically generated by Lily backend team.</p>
      </div>
    </div>
  `
    // text: `Hi ${user.fullName},\n\nYour verification code is: ${otp}
    // \nIt is valid for 10 minutes.
    // \n\nThank you for registering with Lily!`,
  });

  console.log(`OTP sent to ${user.email}`);
  return otp;
};

// otp verification function
export const verifyOTP = async (user, enteredOtp) => {
  const hashedEnteredOtp = crypto
    .createHash("sha256")
    .update(enteredOtp)
    .digest("hex");

  if (
    user.otp !== hashedEnteredOtp ||
    !user.otpExpires ||
    user.otpExpires < Date.now()
  ) {
    return false;
  }

  user.otp = undefined;
  user.otpExpires = undefined;
  user.isVerified = true;
  await user.save();

  return true;
};


// Generate and send OTP for forgot password
export const generateAndSendResetOTP = async (user) => {
  const otp = crypto.randomInt(100000, 999999).toString();
  const hashedOTP = crypto.createHash("sha256").update(otp).digest("hex");
  const otpExpires = Date.now() + 10 * 60 * 1000;

  user.resetOtp = hashedOTP;
  user.resetOtpExpires = otpExpires;
  await user.save();

  await sendEmail({
    to: user.email,
    subject: "Password Reset Code - Lily ðŸŒ±",
    text: `Hi ${user.fullName},\n\nYour password reset code is: ${otp}
    \nIt will expire in 10 minutes.
    \n\nIf you didnâ€™t request this, please contact us.`,
  });

  console.log(`Reset OTP sent to ${user.email}`);
  return otp;
};

// Verify reset OTP
export const verifyResetOTP = async (user, enteredOtp) => {
  const hashedEnteredOtp = crypto
    .createHash("sha256")
    .update(enteredOtp)
    .digest("hex");

  if (
    user.resetOtp !== hashedEnteredOtp ||
    !user.resetOtpExpires ||
    user.resetOtpExpires < Date.now()
  ) {
    return false;
  }

  user.resetOtp = undefined;
  user.resetOtpExpires = undefined;
  await user.save();

  return true;
};